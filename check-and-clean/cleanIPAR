#!/bin/bash
exec > >(tee -a cleanIPAR.txt)
exec 2>&1

printf "%s TIMESTAMP\n" `date +%Y%m%dT%H%M%S`
THISPATH=`pwd`
THISDIR=`basename $THISPATH`
printf "Processing: %s\n" $THISPATH
#if echo $1 > awk '$1 !~ /[0-9]{6}_[A-Za-z]{1}[0-9]{3,5}_[0-9]{4}_[A-Z0-9]{10}/ {exit 1}'; then
#       printf "\nThis dir \'%s\' does not look like an illumina run directory\n\n" $1
#       exit 1
#fi
# Nice use of bash regex's
if [[ ! $THISDIR =~ IPAR_[0-9].[0-9]{2,3} ]];then
        printf "The dir $THISDIR does not look like an illumina IPAR directory\n\n";
        exit 1;
fi
# Bash control operators
#command1 && command2
#   command2 is executed if, and only if, command1 returns an exit status of zero.
#An OR list has the form
#command1 || command2
#   command2 is executed if and only if command1 returns a non-zero exit status.  The return status of AND and OR lists is the exit status of the last command executed in the list.

set -x
rm -rf *_nse.txt.p.gz 
rm -rf *_int.txt.p.gz
rm -rf Matrix
rm -rf Firecrest
printf "%s TIMESTAMP\n" `date +%Y%m%dT%H%M%S`
